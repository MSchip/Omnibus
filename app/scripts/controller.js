// Generated by CoffeeScript 1.7.1
var AmendInfoModel, AmendInfoView, AmendModel, AmendView, BillHoverModel, BillHoverView, BillModel, BillsCollection, ChartView, ContentLayout, EnactedAggModel, EnactedAggView, EnactedModel, EnactedView, MainController, MetaInfoView, MetaLayout, SearchResults, SearchView, WelcomeView,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

WelcomeView = require('./views/welcome-view.coffee');

SearchView = require('./views/search-view.coffee');

ContentLayout = require('./views/content-views/content-layout.coffee');

ChartView = require('./views/content-views/chart-view.coffee');

SearchResults = require('./views/content-views/search-results-view.coffee');

MetaLayout = require('./views/meta-views/meta-layout.coffee');

BillModel = require('./models/bill-model.coffee');

BillsCollection = require('./collections/bills-collection.coffee');

AmendInfoView = require('./views/meta-views/meta-amend-info-view.coffee');

AmendInfoModel = require('./models/meta-amend-info-model.coffee');

AmendView = require('./views/meta-views/meta-amend-view.coffee');

MetaInfoView = require('./views/meta-views/meta-info-view.coffee');

AmendModel = require('./models/meta-amend-model.coffee');

EnactedView = require('./views/content-views/enacted-view.coffee');

EnactedModel = require('./models/enacted-model.coffee');

BillHoverModel = require('./models/meta-bill-hover-model.coffee');

BillHoverView = require('./views/meta-views/meta-bill-hover-view.coffee');

EnactedAggView = require('./views/meta-views/meta-enacted-agg-view.coffee');

EnactedAggModel = require('./models/meta-enacted-agg-model.coffee');

MainController = (function(_super) {
  __extends(MainController, _super);

  function MainController() {
    return MainController.__super__.constructor.apply(this, arguments);
  }

  MainController.prototype.initialize = function(options) {
    var contentLayout;
    this.searchView();
    contentLayout = new ContentLayout;
    this.options.regions.content.show(contentLayout);
    return this.showSpinner(contentLayout.chart);
  };

  MainController.prototype.showSpinner = function(region) {
    console.log(region.$el);
    return region.$el.append(App.spinner);
  };

  MainController.prototype.home = function() {
    var base, congressOne, congressThree, congressTwo;
    base = 'http://omnibus-backend.azurewebsites.net/api/congress/';
    congressOne = $.ajax(base + '111/enacted');
    congressTwo = $.ajax(base + '112/enacted');
    congressThree = $.ajax(base + '113/enacted');
    return $.when(congressOne, congressTwo, congressThree).done((function(_this) {
      return function(dataOne, dataTwo, dataThree) {
        var data, enactedModel, enactedView;
        data = [].concat(dataOne[0], dataTwo[0], dataThree[0]);
        enactedModel = new EnactedModel({
          bills: data
        });
        enactedView = new EnactedView({
          model: enactedModel
        });
        _this.options.regions.content.currentView.chart.show(enactedView);
        App.spinner.stop();
        enactedView.render();
        return _this.makeEnactedMeta(enactedModel);
      };
    })(this));
  };

  MainController.prototype.makeEnactedMeta = function(model) {
    var chartView, metaLayout;
    chartView = this.options.regions.content.currentView;
    metaLayout = new MetaLayout;
    chartView.meta.show(metaLayout);
    this.showSpinner(metaLayout['meta2']);
    this.listenTo(chartView.chart.currentView, 'showBill', function(billId) {
      return this.router.navigate('bills/' + billId, {
        trigger: true
      });
    });
    this.listenTo(chartView.chart.currentView, 'showMeta', function(data) {
      return this.makeBillHover(data).then(function(billView) {
        return metaLayout['meta1'].show(billView);
      });
    });
    this.makeBillHover().then(function(billView) {
      return metaLayout['meta1'].show(billView);
    });
    return this.makeEnactedAggregate(model).then(function(metaView) {
      return metaLayout['meta2'].show(metaView);
    });
  };

  MainController.prototype.makeBillHover = function(hoverData) {
    var amendModel, billHoverModel, billHoverView, deferred;
    deferred = new $.Deferred();
    if (hoverData) {
      billHoverModel = new BillHoverModel({
        data: hoverData
      });
      billHoverView = new BillHoverView({
        model: billHoverModel
      });
    } else {
      amendModel = new AmendModel;
      billHoverView = new MetaInfoView({
        model: amendModel
      });
    }
    deferred.resolve(billHoverView);
    return deferred.promise();
  };

  MainController.prototype.makeEnactedAggregate = function(model) {
    var deferred, enactedAggView;
    deferred = new $.Deferred();
    enactedAggView = new EnactedAggView({
      model: model
    });
    deferred.resolve(enactedAggView);
    return deferred.promise();
  };

  MainController.prototype.showBill = function(billId) {
    this.showSpinner(this.options.regions.content);
    return this.getData(billId).then((function(_this) {
      return function(billModel) {
        return _this.makeBill(billModel, billId);
      };
    })(this));
  };

  MainController.prototype.getData = function(billId) {
    var billModel, deferred;
    deferred = new $.Deferred();
    if (!window.localStorage.getItem(billId)) {
      billModel = new BillModel({
        id: billId
      });
      billModel.fetch().then(function(res) {
        window.localStorage.setItem(billId, JSON.stringify(res));
        return deferred.resolve(billModel);
      });
    } else {
      billModel = new BillModel({
        votes: JSON.parse(window.localStorage.getItem(billId))
      });
      deferred.resolve(billModel);
    }
    return deferred.promise();
  };

  MainController.prototype.makeBill = function(billModel, billId) {
    var chartView, contentLayout;
    if (!window.localStorage.getItem('omnibus-visited')) {
      this.welcomeView(billModel);
      window.localStorage.setItem('omnibus-visited', true);
    }
    chartView = new ChartView({
      model: billModel
    });
    if (!this.options.regions.content.currentView) {
      contentLayout = new ContentLayout;
      this.options.regions.content.show(contentLayout);
    }
    this.options.regions.content.currentView.chart.show(chartView);
    return this.makeBillMeta(billModel, billId);
  };

  MainController.prototype.makeBillMeta = function(model, billId) {
    var chartView, metaLayout;
    chartView = this.options.regions.content.currentView;
    metaLayout = new MetaLayout;
    chartView.meta.show(metaLayout);
    this.listenTo(chartView.chart.currentView, 'showAmendmentData', function(data) {
      return this.makeAmendHover(data).then(function(amendView) {
        return metaLayout['meta1'].show(amendView);
      });
    });
    this.makeAmendHover().then(function(amendView) {
      return metaLayout['meta1'].show(amendView);
    });
    return this.makeAmendAggregate(billId).then(function(metaView) {
      return metaLayout['meta2'].show(metaView);
    });
  };

  MainController.prototype.makeAmendHover = function(amendData) {
    var amendModel, amendView, deferred;
    deferred = new $.Deferred();
    if (amendData) {
      amendModel = new AmendModel({
        data: amendData
      });
      amendView = new AmendView({
        model: amendModel
      });
    } else {
      amendModel = new AmendModel;
      amendView = new MetaInfoView({
        model: amendModel
      });
    }
    deferred.resolve(amendView);
    return deferred.promise();
  };

  MainController.prototype.makeAmendAggregate = function(billId) {
    var amendInfoModel, deferred;
    deferred = new $.Deferred();
    amendInfoModel = new AmendInfoModel({
      id: billId
    });
    amendInfoModel.fetch().then(function() {
      var amendInfoView;
      amendInfoView = new AmendInfoView({
        model: amendInfoModel
      });
      return deferred.resolve(amendInfoView);
    });
    return deferred.promise();
  };

  MainController.prototype.welcomeView = function(billModel) {
    var welcomeView;
    welcomeView = new WelcomeView({
      model: billModel
    });
    $('#information').hide();
    this.listenTo(welcomeView, 'welcome:close', function() {
      this.options.regions.welcome.empty();
      return $('#information').show();
    });
    return this.options.regions.welcome.show(welcomeView);
  };

  MainController.prototype.searchView = function() {
    var searchView;
    searchView = new SearchView;
    this.listenTo(searchView, 'findBill:submit', function(billId) {
      return this.router.navigate('bills/' + billId, {
        trigger: true
      });
    });
    this.listenTo(searchView, 'welcome:show', function() {
      return this.welcomeView(searchView.model);
    });
    this.listenTo(searchView, 'search:bills:submit', function(query) {
      return this.router.navigate('bills/search/' + query, {
        trigger: true
      });
    });
    return this.options.regions.search.show(searchView);
  };

  MainController.prototype.searchResults = function(query) {
    var billsCollection;
    this.showSpinner(this.options.regions.content);
    billsCollection = new BillsCollection({
      query: query
    });
    return billsCollection.fetch().then((function(_this) {
      return function() {
        var searchResults;
        searchResults = new SearchResults({
          collection: billsCollection
        });
        _this.listenTo(searchResults, 'bill:submit', function(billId) {
          return this.router.navigate('bills/' + billId, {
            trigger: true
          });
        });
        return _this.options.regions.content.show(searchResults);
      };
    })(this));
  };

  return MainController;

})(Marionette.Controller);

module.exports = MainController;
