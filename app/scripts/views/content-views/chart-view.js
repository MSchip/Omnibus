// Generated by CoffeeScript 1.7.1
var ChartView, Rickshaw, d3, util,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Rickshaw = require('rickshaw');

util = require('../../helpers/graph-util.coffee');

d3 = require('d3');

ChartView = (function(_super) {
  __extends(ChartView, _super);

  function ChartView() {
    return ChartView.__super__.constructor.apply(this, arguments);
  }

  ChartView.prototype.template = require('./chart-view.jade');

  ChartView.prototype.model = "BillModel";

  ChartView.prototype.initialize = function() {};

  ChartView.prototype.render = function() {
    var formatDate, simpleBill;
    formatDate = d3.time.format.iso;
    simpleBill = this.model.attributes.results[0];
    this.graph = new Rickshaw.Graph({
      element: this.el,
      renderer: "area",
      width: 750,
      height: 400,
      padding: function() {
        return {
          top: 0.02,
          left: 0.02,
          right: 0.08,
          bottom: 0.02
        };
      },
      series: [
        {
          color: "steelblue",
          data: util.findData(simpleBill),
          name: 'action number'
        }
      ]
    });
    this.x_axis = new Rickshaw.Graph.Axis.X({
      graph: this.graph,
      tickFormat: function(x) {
        return new Date(x).toLocaleDateString();
      }
    });
    this.y_axis = new Rickshaw.Graph.Axis.Y({
      graph: this.graph
    });
    this.highlighter = new Rickshaw.Graph.Behavior.Series.Highlight({
      graph: this.graph
    });
    this.hoverDetail = new Rickshaw.Graph.HoverDetail({
      graph: this.graph,
      xFormatter: function(x) {
        return new Date(x).toLocaleDateString();
      },
      yFormatter: function(y) {
        return Math.floor(y);
      }
    });
    this.x_axis.render();
    this.y_axis.render();
    return this.graph.render();
  };

  return ChartView;

})(Marionette.ItemView);

module.exports = ChartView;
